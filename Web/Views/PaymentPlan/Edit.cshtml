@model Infrastructure.Models.PaymentPlan

@{
    ViewBag.Title = "Edit Payment Plan";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PaymentPlan</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDPlan)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

    <table class="table table-bordered my-3">
        <thead>

            <tr>
                <th>@Html.DisplayNameFor(model => model.PaymentItem.First().IDItem)</th>
                <th>@Html.DisplayNameFor(model => model.PaymentItem.First().Description)</th>
                <th>@Html.DisplayNameFor(model => model.PaymentItem.First().Price)</th>
                <th>Action</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.PaymentItem)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.IDItem)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>$ @Html.DisplayFor(modelItem => item.Price)</td>
                    @* Hay que pensar como borrar y meter items en la lista *@
                    <td>
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div>
    @Html.ActionLink("Back to List", "Maintenance", null, new { @class = "btn btn-primary mt-3" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
