@model Infrastructure.Models.PaymentPlan

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Save", "PaymentPlan", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>PaymentPlan</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.IDPlan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IDPlan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IDPlan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PaymentItem, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("selectedPaymentItems",
           (MultiSelectList)ViewBag.IDItem,
           htmlAttributes: new { @class = "form-control", multiple = "multiple", @id = "listItems" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group ">
                <span class="input-group-text">$</span>
                @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "totalPrice" } })
            </div>

            @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary mt-3" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Maintenance", null, new { @class = "btn btn-primary mt-3" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            var listItems = $('#listItems');
            var total = $('#totalPrice');


            listItems.change(function () {
                var selectedOptions = listItems.find('option:selected');
                var auxTotal = 0;

                selectedOptions.each(function () {
                    var texto = $(this).text();
                    var price = parseFloat(texto.split('$')[1]);
                    auxTotal += price;
                });


                total.val(auxTotal.toFixed(2));
            });

        });
    </script>
}
